{"ast":null,"code":"import { LOCATION_CHANGE } from './actions';\n\nvar createConnectRouter = function createConnectRouter(structure) {\n  var fromJS = structure.fromJS,\n      merge = structure.merge;\n\n  var createRouterReducer = function createRouterReducer(history) {\n    var initialRouterState = fromJS({\n      location: history.location,\n      action: history.action\n    });\n    /*\n    * This reducer will update the state with the most recent location history\n    * has transitioned to.\n    */\n\n    return function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialRouterState;\n\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          type = _ref.type,\n          payload = _ref.payload;\n\n      if (type === LOCATION_CHANGE) {\n        var location = payload.location,\n            action = payload.action,\n            isFirstRendering = payload.isFirstRendering; // Don't update the state ref for the first rendering\n        // to prevent the double-rendering issue on initilization\n\n        return isFirstRendering ? state : merge(state, {\n          location: fromJS(location),\n          action: action\n        });\n      }\n\n      return state;\n    };\n  };\n\n  return createRouterReducer;\n};\n\nexport default createConnectRouter;","map":{"version":3,"sources":["/Users/aaronkaspar/Desktop/Mexiko/Modules/DAW/VisualStudio/Flight-main/node_modules/connected-react-router/esm/reducer.js"],"names":["LOCATION_CHANGE","createConnectRouter","structure","fromJS","merge","createRouterReducer","history","initialRouterState","location","action","state","arguments","length","undefined","_ref","type","payload","isFirstRendering"],"mappings":"AAAA,SAASA,eAAT,QAAgC,WAAhC;;AAEA,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,SAA7B,EAAwC;AAChE,MAAIC,MAAM,GAAGD,SAAS,CAACC,MAAvB;AAAA,MACIC,KAAK,GAAGF,SAAS,CAACE,KADtB;;AAGA,MAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AAC9D,QAAIC,kBAAkB,GAAGJ,MAAM,CAAC;AAC9BK,MAAAA,QAAQ,EAAEF,OAAO,CAACE,QADY;AAE9BC,MAAAA,MAAM,EAAEH,OAAO,CAACG;AAFc,KAAD,CAA/B;AAIA;AACJ;AACA;AACA;;AAEI,WAAO,YAAY;AACjB,UAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEJ,kBAAhF;;AAEA,UAAIO,IAAI,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AAAA,UACII,IAAI,GAAGD,IAAI,CAACC,IADhB;AAAA,UAEIC,OAAO,GAAGF,IAAI,CAACE,OAFnB;;AAIA,UAAID,IAAI,KAAKf,eAAb,EAA8B;AAC5B,YAAIQ,QAAQ,GAAGQ,OAAO,CAACR,QAAvB;AAAA,YACIC,MAAM,GAAGO,OAAO,CAACP,MADrB;AAAA,YAEIQ,gBAAgB,GAAGD,OAAO,CAACC,gBAF/B,CAD4B,CAGqB;AACjD;;AAEA,eAAOA,gBAAgB,GAAGP,KAAH,GAAWN,KAAK,CAACM,KAAD,EAAQ;AAC7CF,UAAAA,QAAQ,EAAEL,MAAM,CAACK,QAAD,CAD6B;AAE7CC,UAAAA,MAAM,EAAEA;AAFqC,SAAR,CAAvC;AAID;;AAED,aAAOC,KAAP;AACD,KApBD;AAqBD,GA/BD;;AAiCA,SAAOL,mBAAP;AACD,CAtCD;;AAwCA,eAAeJ,mBAAf","sourcesContent":["import { LOCATION_CHANGE } from './actions';\n\nvar createConnectRouter = function createConnectRouter(structure) {\n  var fromJS = structure.fromJS,\n      merge = structure.merge;\n\n  var createRouterReducer = function createRouterReducer(history) {\n    var initialRouterState = fromJS({\n      location: history.location,\n      action: history.action\n    });\n    /*\n    * This reducer will update the state with the most recent location history\n    * has transitioned to.\n    */\n\n    return function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialRouterState;\n\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          type = _ref.type,\n          payload = _ref.payload;\n\n      if (type === LOCATION_CHANGE) {\n        var location = payload.location,\n            action = payload.action,\n            isFirstRendering = payload.isFirstRendering; // Don't update the state ref for the first rendering\n        // to prevent the double-rendering issue on initilization\n\n        return isFirstRendering ? state : merge(state, {\n          location: fromJS(location),\n          action: action\n        });\n      }\n\n      return state;\n    };\n  };\n\n  return createRouterReducer;\n};\n\nexport default createConnectRouter;"]},"metadata":{},"sourceType":"module"}