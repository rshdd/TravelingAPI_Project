{"ast":null,"code":"import \"core-js/modules/es6.regexp.to-string\";\nexport function identityFn(x) {\n  return x;\n} // Symbols and Arrays containing Symbols cannot be interpolated in template strings,\n// they must be explicitly converted with toString()\n// eslint-disable-next-line import/prefer-default-export\n\nexport function stringifyType(type) {\n  return Array.isArray(type) ? type.map(function (type) {\n    return type.toString();\n  }) : type.toString();\n} // we want to know that this was from intercept (validate/transform)\n// so that we don't apply any processOptions wrapping to it\n\nexport function wrapActionForIntercept(act) {\n  /* istanbul ignore if  */\n  if (!act) {\n    return act;\n  }\n\n  return {\n    __interceptAction: act\n  };\n}\nexport function isInterceptAction(act) {\n  // eslint-disable-next-line no-underscore-dangle\n  return act && act.__interceptAction;\n}\nexport function unwrapInterceptAction(act) {\n  // eslint-disable-next-line no-underscore-dangle\n  return act.__interceptAction;\n}","map":{"version":3,"sources":["/Users/aaronkaspar/Desktop/Mexiko/Modules/DAW/VisualStudio/Flight-main/node_modules/redux-logic/build-es/utils.js"],"names":["identityFn","x","stringifyType","type","Array","isArray","map","toString","wrapActionForIntercept","act","__interceptAction","isInterceptAction","unwrapInterceptAction"],"mappings":"AAAA,OAAO,sCAAP;AACA,OAAO,SAASA,UAAT,CAAoBC,CAApB,EAAuB;AAC5B,SAAOA,CAAP;AACD,C,CAAC;AACF;AACA;;AAEA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAClC,SAAOC,KAAK,CAACC,OAAN,CAAcF,IAAd,IAAsBA,IAAI,CAACG,GAAL,CAAS,UAAUH,IAAV,EAAgB;AACpD,WAAOA,IAAI,CAACI,QAAL,EAAP;AACD,GAF4B,CAAtB,GAEFJ,IAAI,CAACI,QAAL,EAFL;AAGD,C,CAAC;AACF;;AAEA,OAAO,SAASC,sBAAT,CAAgCC,GAAhC,EAAqC;AAC1C;AACA,MAAI,CAACA,GAAL,EAAU;AACR,WAAOA,GAAP;AACD;;AAED,SAAO;AACLC,IAAAA,iBAAiB,EAAED;AADd,GAAP;AAGD;AACD,OAAO,SAASE,iBAAT,CAA2BF,GAA3B,EAAgC;AACrC;AACA,SAAOA,GAAG,IAAIA,GAAG,CAACC,iBAAlB;AACD;AACD,OAAO,SAASE,qBAAT,CAA+BH,GAA/B,EAAoC;AACzC;AACA,SAAOA,GAAG,CAACC,iBAAX;AACD","sourcesContent":["import \"core-js/modules/es6.regexp.to-string\";\nexport function identityFn(x) {\n  return x;\n} // Symbols and Arrays containing Symbols cannot be interpolated in template strings,\n// they must be explicitly converted with toString()\n// eslint-disable-next-line import/prefer-default-export\n\nexport function stringifyType(type) {\n  return Array.isArray(type) ? type.map(function (type) {\n    return type.toString();\n  }) : type.toString();\n} // we want to know that this was from intercept (validate/transform)\n// so that we don't apply any processOptions wrapping to it\n\nexport function wrapActionForIntercept(act) {\n  /* istanbul ignore if  */\n  if (!act) {\n    return act;\n  }\n\n  return {\n    __interceptAction: act\n  };\n}\nexport function isInterceptAction(act) {\n  // eslint-disable-next-line no-underscore-dangle\n  return act && act.__interceptAction;\n}\nexport function unwrapInterceptAction(act) {\n  // eslint-disable-next-line no-underscore-dangle\n  return act.__interceptAction;\n}"]},"metadata":{},"sourceType":"module"}