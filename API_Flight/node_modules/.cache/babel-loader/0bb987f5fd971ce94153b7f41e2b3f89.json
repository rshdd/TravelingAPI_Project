{"ast":null,"code":"var _jsxFileName = \"/Users/aaronkaspar/Desktop/Mexiko/Modules/DAW/VisualStudio/Flight-main/src/Containers/SearchFlightContainer.js\";\nimport React from \"react\";\nimport { createSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { errorSearch, getAirlines, getAirports, onClickSearch } from \"../Core/Actions/FlightActions\";\nimport SearchFlightComponent from \"../Components/SearchFlightComponent\";\n\nclass Flights extends React.PureComponent {\n  componentDidMount() {\n    this.props.getAirports();\n    this.props.getAirlines();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(SearchFlightComponent, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    }));\n  }\n\n}\n\nconst getFlightReducer = state => state.flightReducers;\n\nconst mapStateToProps = createSelector([getFlightReducer], getFlight => {\n  const {\n    error = '',\n    airportList = {},\n    flyerList = {}\n  } = getFlight;\n  return {\n    airportList,\n    flyerList,\n    error\n  };\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAirports: () => dispatch(getAirports()),\n    onClickSearch: (departureValue, arrivalValue) => dispatch(onClickSearch(departureValue, arrivalValue)),\n    errorSearch: error => dispatch(errorSearch(error)),\n    getAirlines: () => dispatch(getAirlines())\n  };\n};\n\nconst SearchFlightContainer = connect(mapStateToProps, mapDispatchToProps)(Flights);\nexport default SearchFlightContainer;","map":{"version":3,"sources":["/Users/aaronkaspar/Desktop/Mexiko/Modules/DAW/VisualStudio/Flight-main/src/Containers/SearchFlightContainer.js"],"names":["React","createSelector","connect","errorSearch","getAirlines","getAirports","onClickSearch","SearchFlightComponent","Flights","PureComponent","componentDidMount","props","render","getFlightReducer","state","flightReducers","mapStateToProps","getFlight","error","airportList","flyerList","mapDispatchToProps","dispatch","departureValue","arrivalValue","SearchFlightContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,QAA6B,UAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,WAAlC,EAA+CC,aAA/C,QAAmE,+BAAnE;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;;AAGA,MAAMC,OAAN,SAAsBR,KAAK,CAACS,aAA5B,CAA0C;AAExCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWN,WAAX;AACA,SAAKM,KAAL,CAAWP,WAAX;AACD;;AAGDQ,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,qBAAD,oBAA2B,KAAKD,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAVuC;;AAa1C,MAAME,gBAAgB,GAAIC,KAAD,IAAWA,KAAK,CAACC,cAA1C;;AAEA,MAAMC,eAAe,GAAGf,cAAc,CACpC,CAACY,gBAAD,CADoC,EAEnCI,SAAD,IAAe;AACb,QAAM;AAACC,IAAAA,KAAK,GAAG,EAAT;AAAaC,IAAAA,WAAW,GAAG,EAA3B;AAA+BC,IAAAA,SAAS,GAAG;AAA3C,MAAiDH,SAAvD;AAEA,SAAO;AACLE,IAAAA,WADK;AAELC,IAAAA,SAFK;AAGLF,IAAAA;AAHK,GAAP;AAKD,CAVmC,CAAtC;;AAaA,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLjB,IAAAA,WAAW,EAAE,MAAMiB,QAAQ,CAACjB,WAAW,EAAZ,CADtB;AAELC,IAAAA,aAAa,EAAE,CAACiB,cAAD,EAAiBC,YAAjB,KAAkCF,QAAQ,CAAChB,aAAa,CAACiB,cAAD,EAAiBC,YAAjB,CAAd,CAFpD;AAGLrB,IAAAA,WAAW,EAAGe,KAAD,IAAWI,QAAQ,CAACnB,WAAW,CAACe,KAAD,CAAZ,CAH3B;AAILd,IAAAA,WAAW,EAAE,MAAMkB,QAAQ,CAAClB,WAAW,EAAZ;AAJtB,GAAP;AAMD,CAPD;;AASA,MAAMqB,qBAAqB,GAAGvB,OAAO,CAACc,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cb,OAA7C,CAA9B;AACA,eAAeiB,qBAAf","sourcesContent":["import React from \"react\";\nimport {createSelector} from \"reselect\";\nimport {connect} from \"react-redux\";\nimport {errorSearch, getAirlines, getAirports, onClickSearch} from \"../Core/Actions/FlightActions\";\nimport SearchFlightComponent from \"../Components/SearchFlightComponent\";\n\n\nclass Flights extends React.PureComponent {\n\n  componentDidMount() {\n    this.props.getAirports();\n    this.props.getAirlines();\n  }\n\n\n  render() {\n    return <SearchFlightComponent {...this.props}/>\n  }\n}\n\nconst getFlightReducer = (state) => state.flightReducers;\n\nconst mapStateToProps = createSelector(\n  [getFlightReducer],\n  (getFlight) => {\n    const {error = '', airportList = {}, flyerList = {}} = getFlight;\n\n    return {\n      airportList,\n      flyerList,\n      error\n    };\n  }\n);\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAirports: () => dispatch(getAirports()),\n    onClickSearch: (departureValue, arrivalValue) => dispatch(onClickSearch(departureValue, arrivalValue)),\n    errorSearch: (error) => dispatch(errorSearch(error)),\n    getAirlines: () => dispatch(getAirlines()),\n  };\n};\n\nconst SearchFlightContainer = connect(mapStateToProps, mapDispatchToProps)(Flights);\nexport default SearchFlightContainer;"]},"metadata":{},"sourceType":"module"}