{"ast":null,"code":"export const getTravel = (flyerList, airportList, airlines) => {\n  let newTravel = [];\n  const departureAirportId = findDepartureAirportId(flyerList, airportList);\n  const arrivalAirportId = findArrivalAirportId(flyerList, airportList);\n  const airlineId = findAirlineId(flyerList, airlines);\n  /* eslint-disable */\n\n  flyerList.map(flyer => {\n    newTravel.push({\n      id: flyer.id,\n      departureAirportId: departureAirportId.find(departure => departure.id === flyer.departureAirportId && departure.codeIata).codeIata,\n      arrivalAirportId: arrivalAirportId.find(arrival => arrival.id === flyer.arrivalAirportId && arrival.codeIata).codeIata,\n      airlineId: airlineId.find(airline => airline.id === flyer.airlineId && airline.name).name,\n      price: flyer.price\n    });\n  });\n  return newTravel;\n};\nexport const findDepartureAirportId = (flyerList, airportList) => {\n  return flyerList.map(flyer => airportList.find(airport => airport.id === flyer.departureAirportId));\n};\nexport const findArrivalAirportId = (flyerList, airportList) => {\n  return flyerList.map(flyer => airportList.find(airport => airport.id === flyer.arrivalAirportId));\n};\nexport const findAirlineId = (flyerList, airlines) => {\n  return flyerList.map(flyer => airlines.find(al => al.id === flyer.airlineId));\n};\nexport const findTotalPrice = travels => {\n  let price = 0;\n  travels.map(travel => price = price + travel.price);\n  return price.toFixed(2);\n};\nexport const findStopOvers = travels => {\n  return travels.length === 0 ? '' : travels.length === 1 ? `Attenzione è presente ${travels.length} scalo` : `Attenzione sono presenti ${travels.length} scali`;\n};","map":{"version":3,"sources":["/Users/aaronkaspar/Desktop/Mexiko/Modules/DAW/VisualStudio/Flight-main/src/Utils/FlightUtils.js"],"names":["getTravel","flyerList","airportList","airlines","newTravel","departureAirportId","findDepartureAirportId","arrivalAirportId","findArrivalAirportId","airlineId","findAirlineId","map","flyer","push","id","find","departure","codeIata","arrival","airline","name","price","airport","al","findTotalPrice","travels","travel","toFixed","findStopOvers","length"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,CAACC,SAAD,EAAYC,WAAZ,EAAyBC,QAAzB,KAAsC;AAC7D,MAAIC,SAAS,GAAG,EAAhB;AAEA,QAAMC,kBAAkB,GAAGC,sBAAsB,CAACL,SAAD,EAAYC,WAAZ,CAAjD;AACA,QAAMK,gBAAgB,GAAGC,oBAAoB,CAACP,SAAD,EAAYC,WAAZ,CAA7C;AACA,QAAMO,SAAS,GAAGC,aAAa,CAACT,SAAD,EAAYE,QAAZ,CAA/B;AACA;;AACAF,EAAAA,SAAS,CAACU,GAAV,CAAeC,KAAD,IAAW;AACvBR,IAAAA,SAAS,CAACS,IAAV,CAAe;AACbC,MAAAA,EAAE,EAAEF,KAAK,CAACE,EADG;AAEbT,MAAAA,kBAAkB,EAAEA,kBAAkB,CAACU,IAAnB,CAAwBC,SAAS,IAAIA,SAAS,CAACF,EAAV,KAAiBF,KAAK,CAACP,kBAAvB,IAA6CW,SAAS,CAACC,QAA5F,EAAsGA,QAF7G;AAGbV,MAAAA,gBAAgB,EAAEA,gBAAgB,CAACQ,IAAjB,CAAsBG,OAAO,IAAIA,OAAO,CAACJ,EAAR,KAAeF,KAAK,CAACL,gBAArB,IAAyCW,OAAO,CAACD,QAAlF,EAA4FA,QAHjG;AAIbR,MAAAA,SAAS,EAAEA,SAAS,CAACM,IAAV,CAAeI,OAAO,IAAIA,OAAO,CAACL,EAAR,KAAeF,KAAK,CAACH,SAArB,IAAkCU,OAAO,CAACC,IAApE,EAA0EA,IAJxE;AAKbC,MAAAA,KAAK,EAAET,KAAK,CAACS;AALA,KAAf;AAQD,GATD;AAWA,SAAOjB,SAAP;AACD,CAnBM;AAqBP,OAAO,MAAME,sBAAsB,GAAG,CAACL,SAAD,EAAYC,WAAZ,KAA4B;AAChE,SAAOD,SAAS,CAACU,GAAV,CAAcC,KAAK,IAAIV,WAAW,CAACa,IAAZ,CAAiBO,OAAO,IAAIA,OAAO,CAACR,EAAR,KAAeF,KAAK,CAACP,kBAAjD,CAAvB,CAAP;AAED,CAHM;AAKP,OAAO,MAAMG,oBAAoB,GAAG,CAACP,SAAD,EAAYC,WAAZ,KAA4B;AAC9D,SAAOD,SAAS,CAACU,GAAV,CAAcC,KAAK,IAAIV,WAAW,CAACa,IAAZ,CAAiBO,OAAO,IAAIA,OAAO,CAACR,EAAR,KAAeF,KAAK,CAACL,gBAAjD,CAAvB,CAAP;AAED,CAHM;AAKP,OAAO,MAAMG,aAAa,GAAG,CAACT,SAAD,EAAYE,QAAZ,KAAyB;AACpD,SAAOF,SAAS,CAACU,GAAV,CAAcC,KAAK,IAAIT,QAAQ,CAACY,IAAT,CAAcQ,EAAE,IAAIA,EAAE,CAACT,EAAH,KAAUF,KAAK,CAACH,SAApC,CAAvB,CAAP;AACD,CAFM;AAIP,OAAO,MAAMe,cAAc,GAAIC,OAAD,IAAa;AACzC,MAAIJ,KAAK,GAAG,CAAZ;AACAI,EAAAA,OAAO,CAACd,GAAR,CAAYe,MAAM,IAAIL,KAAK,GAAGA,KAAK,GAAGK,MAAM,CAACL,KAA7C;AAEA,SAAOA,KAAK,CAACM,OAAN,CAAc,CAAd,CAAP;AACD,CALM;AAOP,OAAO,MAAMC,aAAa,GAAIH,OAAD,IAAa;AACxC,SAAOA,OAAO,CAACI,MAAR,KAAmB,CAAnB,GAAuB,EAAvB,GAA4BJ,OAAO,CAACI,MAAR,KAAmB,CAAnB,GAC9B,yBAAwBJ,OAAO,CAACI,MAAO,QADT,GAE9B,4BAA2BJ,OAAO,CAACI,MAAO,QAF/C;AAGD,CAJM","sourcesContent":["export const getTravel = (flyerList, airportList, airlines) => {\n  let newTravel = [];\n\n  const departureAirportId = findDepartureAirportId(flyerList, airportList);\n  const arrivalAirportId = findArrivalAirportId(flyerList, airportList);\n  const airlineId = findAirlineId(flyerList, airlines);\n  /* eslint-disable */\n  flyerList.map((flyer) => {\n    newTravel.push({\n      id: flyer.id,\n      departureAirportId: departureAirportId.find(departure => departure.id === flyer.departureAirportId && departure.codeIata).codeIata,\n      arrivalAirportId: arrivalAirportId.find(arrival => arrival.id === flyer.arrivalAirportId && arrival.codeIata).codeIata,\n      airlineId: airlineId.find(airline => airline.id === flyer.airlineId && airline.name).name,\n      price: flyer.price,\n    });\n\n  });\n\n  return newTravel;\n};\n\nexport const findDepartureAirportId = (flyerList, airportList) => {\n  return flyerList.map(flyer => airportList.find(airport => airport.id === flyer.departureAirportId))\n\n};\n\nexport const findArrivalAirportId = (flyerList, airportList) => {\n  return flyerList.map(flyer => airportList.find(airport => airport.id === flyer.arrivalAirportId))\n\n};\n\nexport const findAirlineId = (flyerList, airlines) => {\n  return flyerList.map(flyer => airlines.find(al => al.id === flyer.airlineId));\n}\n\nexport const findTotalPrice = (travels) => {\n  let price = 0;\n  travels.map(travel => price = price + travel.price);\n\n  return price.toFixed(2);\n}\n\nexport const findStopOvers = (travels) => {\n  return travels.length === 0 ? '' : travels.length === 1\n    ? `Attenzione è presente ${travels.length} scalo`\n    : `Attenzione sono presenti ${travels.length} scali`;\n}"]},"metadata":{},"sourceType":"module"}